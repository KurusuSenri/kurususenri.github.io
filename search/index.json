[{"content":"Lorem ipsum 待补全。\n","date":"2021-07-26T00:00:00Z","image":"/p/hello-world/cover_hu70055442012f6fee64cc36fcb98f4943_441138_120x120_fill_q75_box_smart1.jpeg","permalink":"/p/hello-world/","title":"Hello World"},{"content":"  还是选 iPhone 是因为咱是 iCloud 的重度用户而且和 Mac 结合非常方便\n  因为只是「笔记」所以本文充满了我的偏见与独断x\n  截止目前2021.7.27，同样是二手、国行、九新+、256G\nXR 和 XS 的价格都在 3500 左右，\n且 XR 会稍微便宜一点（也就在两三百左右\n  接下来记录一下自己查资料时的一些思路\n外观 \u0026amp; 手感 不得不说我感觉 XR 的单摄像头好好看啊啊啊啊\n而且花里胡哨的颜色\n但好像很多人对 XR 的边框很不满\n但我平常是看屏幕不是看边框啊喂，停航母边框又咋样、反正我也不戴tao——\n* 看了下自己背面全是坑正面玻璃全碎的 6S\n我觉得可能还是戴套比较好。\n顺便因为 XR 还挺厚，\n所以至少 XS 戴套的话正面无论看起来还是操作起来都会优于 XR 的吧\n（话说上一句话不应该是归类于#屏幕节么x\n 所以对我来说的话，\n如果都戴套：\n手感：XS \u0026gt; XR\n外观：半斤八两，虽然 XS 赢了正面但背面果然还是 XR 好看\n 续航 毕竟这个 6S 已经\u0026hellip;2015 年发布到现在已经 6 年了所以电池实在是\u0026hellip;\nXS 的续航嘛\u0026hellip;\n不用说了\n 续航：XS \u0026lt; XR\n 性能 似乎我不是很关注手机的性能毕竟不太用手机玩游戏的\n但是觉得这也很有必要放进考虑里\nXS 的内存是 4GB，XR 与 X 一样是 3GB\n其实反正是墓碑后台所以估计在未来两年内（瞎猜的）除了 XR 可能偶尔杀杀后台以外其他地方几乎无区别\n顺便隔壁 SE 二代也是 3GB 内存来着\n话说是哪个啥比起头把闪存也叫做内存的\n现在说个「内存」都不知道在指 RAM 还是闪存kuso\u0026hellip;\n另外两个都是 A12 处理器，但很重要的是，XS 是双层主板\n所以发热很——严重\n那\n 发热严重 → 降频 \u0026amp;\u0026amp; 屏幕亮度降低 → 看起来和摸起来都很不舒服\n emm实在不知道怎么比\n或许因为我不算重度使用的人所以我还是考虑：\n RAM 更大 → 可以撑更多年\nXS \u0026gt; XR\n 摄影 原谅我用了「摄影」而不是「拍照」、因为只是觉得前者好听x\nXR 的主摄 和 XS 的其实是一个\nXS 多的那个长焦镜头\u0026hellip;至少它有\n「人像模式」也就是模拟景深的这部分\nXR 虽然可以靠算法识别出人把人给抠出来，\n但是它只能识别人（草\nXS 的话是利用到了那个长焦镜头所以其他一些东西也可以模拟景深（虽然效果并不好\n但是本着有总比没有强x\n 摄像：XR \u0026gt; XS\n 屏幕 emm\n其实并不是很不在乎这个\u0026hellip;\n  因为用过很长时间的 Windows Phone 所以我个人偏向 OLED 因为黑色舒服\n  其实不喜欢 iOS 的深色模式、只是因为我觉得看不清（或许是 6S 的问题\n所以其实 LCD 也无所谓\n  不觉得 XR 1792×828 \u0026amp; 326 ppi 的屏幕没法看\n  XS 5.8 英寸，XR 6.1 英寸；其实我觉得都可\n   结论\n没有结论\n 总结 草\n我没想好\n再不行我就抛个硬币让命运石之门帮我决定得了\n","date":"2021-07-27T00:00:00Z","permalink":"/p/%E5%85%B3%E4%BA%8E-2021-%E5%B9%B4%E6%8D%A1%E5%9E%83%E5%9C%BE%E6%98%AF%E9%80%89-xr-%E8%BF%98%E6%98%AF-xs-%E7%9A%84%E7%AC%94%E8%AE%B0/","title":"关于 2021 年捡垃圾是选 XR 还是 XS 的笔记"},{"content":"Control + i\n","date":"2021-07-26T00:00:00Z","permalink":"/p/visual-studio-mac-%E4%BB%A3%E7%A0%81%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%BF%AB%E6%8D%B7%E9%94%AE/","title":"Visual Studio Mac 代码格式化快捷键"},{"content":"Markdown For Typora Overview Markdown is created by Daring Fireball; the original guideline is here. Its syntax, however, varies between different parsers or editors. Typora is using GitHub Flavored Markdown.\n[toc]\nBlock Elements Paragraph and line breaks A paragraph is simply one or more consecutive lines of text. In markdown source code, paragraphs are separated by two or more blank lines. In Typora, you only need one blank line (press Return once) to create a new paragraph.\nPress Shift + Return to create a single line break. Most other markdown parsers will ignore single line breaks, so in order to make other markdown parsers recognize your line break, you can leave two spaces at the end of the line, or insert \u0026lt;br/\u0026gt;.\nHeaders Headers use 1-6 hash (#) characters at the start of the line, corresponding to header levels 1-6. For example:\n# This is an H1 ## This is an H2  ###### This is an H6 In Typora, input ‘#’s followed by title content, and press Return key will create a header.\nBlockquotes Markdown uses email-style \u0026gt; characters for block quoting. They are presented as:\n\u0026gt; This is a blockquote with two paragraphs. This is first paragraph. \u0026gt; \u0026gt; This is second pragraph. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. \u0026gt; This is another blockquote with one paragraph. There is three empty line to seperate two blockquote. In Typora, inputting ‘\u0026gt;’ followed by your quote contents will generate a quote block. Typora will insert a proper ‘\u0026gt;’ or line break for you. Nested block quotes (a block quote inside another block quote) by adding additional levels of ‘\u0026gt;’.\nLists Input * list item 1 will create an unordered list - the * symbol can be replace with + or -.\nInput 1. list item 1 will create an ordered list - their markdown source code is as follows:\n## un-ordered list * Red * Green * Blue ## ordered list 1. Red 2. Green 3.\tBlue Task List Task lists are lists with items marked as either [ ] or [x] (incomplete or complete). For example:\n- [ ] a task list item - [ ] list syntax required - [ ] normal **formatting**, @mentions, #1234 refs - [ ] incomplete - [x] completed You can change the complete/incomplete state by clicking on the checkbox before the item.\n(Fenced) Code Blocks Typora only supports fences in GitHub Flavored Markdown. Original code blocks in markdown are not supported.\nUsing fences is easy: Input ``` and press return. Add an optional language identifier after ``` and we\u0026rsquo;ll run it through syntax highlighting:\nHere's an example: ```js function test() { console.log(\u0026quot;notice the blank line before this function?\u0026quot;); } ``` syntax highlighting: ```ruby require 'redcarpet' markdown = Redcarpet.new(\u0026quot;Hello World!\u0026quot;) puts markdown.to_html ``` Math Blocks You can render LaTeX mathematical expressions using MathJax.\nTo add a mathematical expression, input $$ and press the \u0026lsquo;Return\u0026rsquo; key. This will trigger an input field which accepts Tex/LaTex source. For example:\n$$ \\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} \u0026amp; \\mathbf{j} \u0026amp; \\mathbf{k} \\\n\\frac{\\partial X}{\\partial u} \u0026amp; \\frac{\\partial Y}{\\partial u} \u0026amp; 0 \\\n\\frac{\\partial X}{\\partial v} \u0026amp; \\frac{\\partial Y}{\\partial v} \u0026amp; 0 \\\n\\end{vmatrix} $$\nIn the markdown source file, the math block is a LaTeX expression wrapped by a pair of ‘$$’ marks:\n$$ \\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} \u0026amp; \\mathbf{j} \u0026amp; \\mathbf{k} \\\\ \\frac{\\partial X}{\\partial u} \u0026amp; \\frac{\\partial Y}{\\partial u} \u0026amp; 0 \\\\ \\frac{\\partial X}{\\partial v} \u0026amp; \\frac{\\partial Y}{\\partial v} \u0026amp; 0 \\\\ \\end{vmatrix} $$ You can find more details here.\nTables Input | First Header | Second Header | and press the return key. This will create a table with two columns.\nAfter a table is created, putting focus on that table will open up a toolbar for the table where you can resize, align, or delete the table. You can also use the context menu to copy and add/delete individual columns/rows.\nThe full syntax for tables is described below, but it is not necessary to know the full syntax in detail as the markdown source code for tables is generated automatically by Typora.\nIn markdown source code, they look like:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell | You can also include inline Markdown such as links, bold, italics, or strikethrough in the table.\nFinally, by including colons (:) within the header row, you can define text in that column to be left-aligned, right-aligned, or center-aligned:\n| Left-Aligned | Center Aligned | Right Aligned | | :------------ |:---------------:| -----:| | col 3 is | some wordy text | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | A colon on the left-most side indicates a left-aligned column; a colon on the right-most side indicates a right-aligned column; a colon on both sides indicates a center-aligned column.\nFootnotes You can create footnotes like this[^footnote]. [^footnote]: Here is the *text* of the **footnote**. will produce:\nYou can create footnotes like this1.\nHover over the ‘footnote’ superscript to see content of the footnote.\nHorizontal Rules Inputting *** or --- on a blank line and pressing return will draw a horizontal line.\nYAML Front Matter Typora now supports YAML Front Matter. Input --- at the top of the article and then press Return to introduce a metadata block. Alternatively, you can insert a metadata block from the top menu of Typora.\nTable of Contents (TOC) Input [toc] and press the Return key. This will create a “Table of Contents” section. The TOC extracts all headers from the document, and its contents are updated automatically as you add to the document.\nSpan Elements Span elements will be parsed and rendered right after typing. Moving the cursor in middle of those span elements will expand those elements into markdown source. Below is an explanation of the syntax for each span element.\nLinks Markdown supports two styles of links: inline and reference.\nIn both styles, the link text is delimited by [square brackets].\nTo create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an optional title for the link, surrounded in quotes. For example:\nThis is [an example](http://example.com/ \u0026#34;Title\u0026#34;) inline link. [This link](http://example.net/) has no title attribute. will produce:\nThis is an example inline link. (\u0026lt;p\u0026gt;This is \u0026lt;a href=\u0026quot;http://example.com/\u0026quot; title=\u0026quot;Title\u0026quot;\u0026gt;)\nThis link has no title attribute. (\u0026lt;p\u0026gt;\u0026lt;a href=\u0026quot;http://example.net/\u0026quot;\u0026gt;This link\u0026lt;/a\u0026gt; has no)\nInternal Links You can set the href to headers, which will create a bookmark that allow you to jump to that section after clicking. For example:\nCommand(on Windows: Ctrl) + Click This link will jump to header Block Elements. To see how to write that, please move cursor or click that link with ⌘ key pressed to expand the element into markdown source.\nReference Links Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:\nThis is [an example][id] reference-style link. Then, anywhere in the document, you define your link label on a line by itself like this: [id]: http://example.com/ \u0026#34;Optional Title Here\u0026#34; In Typora, they will be rendered like so:\nThis is an example reference-style link.\nThe implicit link name shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets — for example, to link the word “Google” to the google.com web site, you could simply write:\n[Google][] And then define the link: [Google]: http://google.com/ In Typora, clicking the link will expand it for editing, and command+click will open the hyperlink in your web browser.\nURLs Typora allows you to insert URLs as links, wrapped by \u0026lt;brackets\u0026gt;.\n\u0026lt;i@typora.io\u0026gt; becomes i@typora.io.\nTypora will also automatically link standard URLs. e.g: www.google.com.\nImages Images have similar syntax as links, but they require an additional ! char before the start of the link. The syntax for inserting an image looks like this:\n![Alt text](/path/to/img.jpg) ![Alt text](/path/to/img.jpg \u0026#34;Optional title\u0026#34;) You are able to use drag \u0026amp; drop to insert an image from an image file or your web browser. You can modify the markdown source code by clicking on the image. A relative path will be used if the image that is added using drag \u0026amp; drop is in same directory or sub-directory as the document you\u0026rsquo;re currently editing.\nIf you’re using markdown for building websites, you may specify a URL prefix for the image preview on your local computer with property typora-root-url in YAML Front Matters. For example, input typora-root-url:/User/Abner/Website/typora.io/ in YAML Front Matters, and then ![alt](/blog/img/test.png) will be treated as ![alt](file:///User/Abner/Website/typora.io/blog/img/test.png) in Typora.\nYou can find more details here.\nEmphasis Markdown treats asterisks (*) and underscores (_) as indicators of emphasis. Text wrapped with one * or _ will be wrapped with an HTML \u0026lt;em\u0026gt; tag. E.g:\n*single asterisks* _single underscores_ output:\nsingle asterisks\nsingle underscores\nGFM will ignore underscores in words, which is commonly used in code and names, like this:\n wow_great_stuff\ndo_this_and_do_that_and_another_thing.\n To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:\n\\*this text is surrounded by literal asterisks\\* Typora recommends using the * symbol.\nStrong A double * or _ will cause its enclosed contents to be wrapped with an HTML \u0026lt;strong\u0026gt; tag, e.g:\n**double asterisks** __double underscores__ output:\ndouble asterisks\ndouble underscores\nTypora recommends using the ** symbol.\nCode To indicate an inline span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:\nUse the `printf()` function. will produce:\nUse the printf() function.\nStrikethrough GFM adds syntax to create strikethrough text, which is missing from standard Markdown.\n~~Mistaken text.~~ becomes Mistaken text.\nUnderlines Underline is powered by raw HTML.\n\u0026lt;u\u0026gt;Underline\u0026lt;/u\u0026gt; becomes Underline.\nEmoji :smile: Input emoji with syntax :smile:.\nUser can trigger auto-complete suggestions for emoji by pressing ESC key, or trigger it automatically after enabling it on preference panel. Also, inputting UTF-8 emoji characters directly is also supported by going to Edit -\u0026gt; Emoji \u0026amp; Symbols in the menu bar (macOS).\nInline Math To use this feature, please enable it first in the Preference Panel -\u0026gt; Markdown Tab. Then, use $ to wrap a TeX command. For example: $\\lim_{x \\to \\infty} \\exp(-x) = 0$ will be rendered as LaTeX command.\nTo trigger inline preview for inline math: input “$”, then press the ESC key, then input a TeX command.\nYou can find more details here.\nSubscript To use this feature, please enable it first in the Preference Panel -\u0026gt; Markdown Tab. Then, use ~ to wrap subscript content. For example: H~2~O, X~long\\ text~/\nSuperscript To use this feature, please enable it first in the Preference Panel -\u0026gt; Markdown Tab. Then, use ^ to wrap superscript content. For example: X^2^.\nHighlight To use this feature, please enable it first in the Preference Panel -\u0026gt; Markdown Tab. Then, use == to wrap highlight content. For example: ==highlight==.\nHTML You can use HTML to style content what pure Markdown does not support. For example, use \u0026lt;span style=\u0026quot;color:red\u0026quot;\u0026gt;this text is red\u0026lt;/span\u0026gt; to add text with red color.\nEmbed Contents Some websites provide iframe-based embed code which you can also paste into Typora. For example:\n\u0026lt;iframe height=\u0026#39;265\u0026#39; scrolling=\u0026#39;no\u0026#39; title=\u0026#39;Fancy Animated SVG Menu\u0026#39; src=\u0026#39;http://codepen.io/jeangontijo/embed/OxVywj/?height=265\u0026amp;theme-id=0\u0026amp;default-tab=css,result\u0026amp;embed-version=2\u0026#39; frameborder=\u0026#39;no\u0026#39; allowtransparency=\u0026#39;true\u0026#39; allowfullscreen=\u0026#39;true\u0026#39; style=\u0026#39;width: 100%;\u0026#39;\u0026gt;\u0026lt;/iframe\u0026gt; Video You can use the \u0026lt;video\u0026gt; HTML tag to embed videos. For example:\n\u0026lt;video src=\u0026#34;xxx.mp4\u0026#34; /\u0026gt; Other HTML Support You can find more details here.\n Here is the text of the footnote. \u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-07-23T00:00:00Z","permalink":"/p/lorem-ipsum/","title":"Lorem ipsum"}]