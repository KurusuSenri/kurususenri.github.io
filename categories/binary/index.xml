<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Binary on Senri&#39;s Memo</title>
    <link>/categories/binary/</link>
    <description>Recent content in Binary on Senri&#39;s Memo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="/categories/binary/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[unfinished] Protostar Stack 0-7 Walkthrough</title>
      <link>/p/protostar_stack_0-7/</link>
      <pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/p/protostar_stack_0-7/</guid>
      <description>Protostar â˜ž Protostar
Protostar introduces the following in a friendly way:
 Network programming Byte order Handling sockets Stack overflows Format strings Heap overflows The above is introduced in a simple way, starting with simple memory corruption and modification, function redirection, and finally executing custom shellcode.  In order to make this as easy as possible to introduce Address Space Layout Randomisation and Non-Executable memory has been disabled. If you are interested in covering ASLR and NX memory, please see the Fusion page.</description>
    </item>
    
  </channel>
</rss>
